{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport mockData from \"../mock-data.json\";\nimport { useContext } from \"react\";\nimport { AppContext } from \"./context\";\nconst TRANSACTIONS_PER_PAGE = 5;\nexport const useUpdateCache = _ref => {\n  _s();\n\n  let {\n    transactions\n  } = _ref;\n  const {\n    cache\n  } = useContext(AppContext);\n\n  if (!transactions) {\n    return;\n  }\n\n  cache === null || cache === void 0 ? void 0 : cache.current.set(\"paginatedTransactions\", JSON.stringify(transactions));\n};\n\n_s(useUpdateCache, \"pZ807ot8DPOlIz99hnixyQfzWkk=\");\n\nconst data = {\n  employees: mockData.employees,\n  transactions: mockData.transactions\n};\nexport const getEmployees = () => data.employees;\nexport const getTransactionsPaginated = _ref2 => {\n  let {\n    page\n  } = _ref2;\n\n  if (page === null) {\n    throw new Error(\"Page cannot be null\");\n  }\n\n  const start = page * TRANSACTIONS_PER_PAGE;\n  const end = start + TRANSACTIONS_PER_PAGE;\n\n  if (start > data.transactions.length) {\n    throw new Error(`Invalid page ${page}`);\n  }\n\n  const nextPage = end < data.transactions.length ? page + 1 : null;\n  return {\n    nextPage,\n    data: data.transactions.slice(start, end)\n  };\n};\nexport const getTransactionsByEmployee = _ref3 => {\n  let {\n    employeeId\n  } = _ref3;\n\n  if (!employeeId) {\n    throw new Error(\"Employee id cannot be empty\");\n  }\n\n  return data.transactions.filter(transaction => transaction.employee.id === employeeId);\n};\nexport const setTransactionApproval = _ref4 => {\n  let {\n    transactionId,\n    value\n  } = _ref4;\n  const Newtransaction = data.transactions.find(currentTransaction => currentTransaction.id === transactionId);\n\n  if (!Newtransaction) {\n    throw new Error(\"Invalid transaction to approve\");\n  }\n\n  data.transactions.forEach((transaction, i, arr) => {\n    if (transaction.id === transactionId) {\n      arr[i].approved = value;\n    }\n  });\n  return Newtransaction.approved;\n};","map":{"version":3,"names":["mockData","useContext","AppContext","TRANSACTIONS_PER_PAGE","useUpdateCache","transactions","cache","current","set","JSON","stringify","data","employees","getEmployees","getTransactionsPaginated","page","Error","start","end","length","nextPage","slice","getTransactionsByEmployee","employeeId","filter","transaction","employee","id","setTransactionApproval","transactionId","value","Newtransaction","find","currentTransaction","forEach","i","arr","approved"],"sources":["/home/edison/TakeHomeWork/Ramp/ramp-fe-challenge/src/utils/requests.ts"],"sourcesContent":["import {\n  PaginatedRequestParams,\n  PaginatedResponse,\n  RequestByEmployeeParams,\n  SetTransactionApprovalParams,\n  Transaction,\n  Employee,\n  AppDataParams,\n  CacheUpdateDataParams,\n} from \"./types\"\nimport mockData from \"../mock-data.json\"\n\nimport { useContext } from \"react\"\nimport { AppContext } from \"./context\"\n\nconst TRANSACTIONS_PER_PAGE = 5\n\nexport const useUpdateCache = ({ transactions }: CacheUpdateDataParams) => {\n  const { cache } = useContext(AppContext)\n\n  if (!transactions) {\n    return\n  }\n  cache?.current.set(\"paginatedTransactions\", JSON.stringify(transactions))\n}\n\nconst data: AppDataParams = {\n  employees: mockData.employees,\n  transactions: mockData.transactions,\n}\n\nexport const getEmployees = (): Employee[] => data.employees\n\nexport const getTransactionsPaginated = ({\n  page,\n}: PaginatedRequestParams): PaginatedResponse<Transaction[]> => {\n  if (page === null) {\n    throw new Error(\"Page cannot be null\")\n  }\n\n  const start = page * TRANSACTIONS_PER_PAGE\n  const end = start + TRANSACTIONS_PER_PAGE\n\n  if (start > data.transactions.length) {\n    throw new Error(`Invalid page ${page}`)\n  }\n\n  const nextPage = end < data.transactions.length ? page + 1 : null\n\n  return {\n    nextPage,\n    data: data.transactions.slice(start, end),\n  }\n}\n\nexport const getTransactionsByEmployee = ({ employeeId }: RequestByEmployeeParams) => {\n  if (!employeeId) {\n    throw new Error(\"Employee id cannot be empty\")\n  }\n\n  return data.transactions.filter((transaction) => transaction.employee.id === employeeId)\n}\n\nexport const setTransactionApproval = ({\n  transactionId,\n  value,\n}: SetTransactionApprovalParams): boolean => {\n  const Newtransaction = data.transactions.find(\n    (currentTransaction) => currentTransaction.id === transactionId\n  )\n  if (!Newtransaction) {\n    throw new Error(\"Invalid transaction to approve\")\n  }\n\n  data.transactions.forEach((transaction, i, arr) => {\n    if (transaction.id === transactionId) {\n      arr[i].approved = value\n    }\n  })\n  return Newtransaction.approved\n}\n"],"mappings":";;AAUA,OAAOA,QAAP,MAAqB,mBAArB;AAEA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,UAAT,QAA2B,WAA3B;AAEA,MAAMC,qBAAqB,GAAG,CAA9B;AAEA,OAAO,MAAMC,cAAc,GAAG,QAA6C;EAAA;;EAAA,IAA5C;IAAEC;EAAF,CAA4C;EACzE,MAAM;IAAEC;EAAF,IAAYL,UAAU,CAACC,UAAD,CAA5B;;EAEA,IAAI,CAACG,YAAL,EAAmB;IACjB;EACD;;EACDC,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEC,OAAP,CAAeC,GAAf,CAAmB,uBAAnB,EAA4CC,IAAI,CAACC,SAAL,CAAeL,YAAf,CAA5C;AACD,CAPM;;GAAMD,c;;AASb,MAAMO,IAAmB,GAAG;EAC1BC,SAAS,EAAEZ,QAAQ,CAACY,SADM;EAE1BP,YAAY,EAAEL,QAAQ,CAACK;AAFG,CAA5B;AAKA,OAAO,MAAMQ,YAAY,GAAG,MAAkBF,IAAI,CAACC,SAA5C;AAEP,OAAO,MAAME,wBAAwB,GAAG,SAEwB;EAAA,IAFvB;IACvCC;EADuC,CAEuB;;EAC9D,IAAIA,IAAI,KAAK,IAAb,EAAmB;IACjB,MAAM,IAAIC,KAAJ,CAAU,qBAAV,CAAN;EACD;;EAED,MAAMC,KAAK,GAAGF,IAAI,GAAGZ,qBAArB;EACA,MAAMe,GAAG,GAAGD,KAAK,GAAGd,qBAApB;;EAEA,IAAIc,KAAK,GAAGN,IAAI,CAACN,YAAL,CAAkBc,MAA9B,EAAsC;IACpC,MAAM,IAAIH,KAAJ,CAAW,gBAAeD,IAAK,EAA/B,CAAN;EACD;;EAED,MAAMK,QAAQ,GAAGF,GAAG,GAAGP,IAAI,CAACN,YAAL,CAAkBc,MAAxB,GAAiCJ,IAAI,GAAG,CAAxC,GAA4C,IAA7D;EAEA,OAAO;IACLK,QADK;IAELT,IAAI,EAAEA,IAAI,CAACN,YAAL,CAAkBgB,KAAlB,CAAwBJ,KAAxB,EAA+BC,GAA/B;EAFD,CAAP;AAID,CApBM;AAsBP,OAAO,MAAMI,yBAAyB,GAAG,SAA6C;EAAA,IAA5C;IAAEC;EAAF,CAA4C;;EACpF,IAAI,CAACA,UAAL,EAAiB;IACf,MAAM,IAAIP,KAAJ,CAAU,6BAAV,CAAN;EACD;;EAED,OAAOL,IAAI,CAACN,YAAL,CAAkBmB,MAAlB,CAA0BC,WAAD,IAAiBA,WAAW,CAACC,QAAZ,CAAqBC,EAArB,KAA4BJ,UAAtE,CAAP;AACD,CANM;AAQP,OAAO,MAAMK,sBAAsB,GAAG,SAGO;EAAA,IAHN;IACrCC,aADqC;IAErCC;EAFqC,CAGM;EAC3C,MAAMC,cAAc,GAAGpB,IAAI,CAACN,YAAL,CAAkB2B,IAAlB,CACpBC,kBAAD,IAAwBA,kBAAkB,CAACN,EAAnB,KAA0BE,aAD7B,CAAvB;;EAGA,IAAI,CAACE,cAAL,EAAqB;IACnB,MAAM,IAAIf,KAAJ,CAAU,gCAAV,CAAN;EACD;;EAEDL,IAAI,CAACN,YAAL,CAAkB6B,OAAlB,CAA0B,CAACT,WAAD,EAAcU,CAAd,EAAiBC,GAAjB,KAAyB;IACjD,IAAIX,WAAW,CAACE,EAAZ,KAAmBE,aAAvB,EAAsC;MACpCO,GAAG,CAACD,CAAD,CAAH,CAAOE,QAAP,GAAkBP,KAAlB;IACD;EACF,CAJD;EAKA,OAAOC,cAAc,CAACM,QAAtB;AACD,CAjBM"},"metadata":{},"sourceType":"module"}