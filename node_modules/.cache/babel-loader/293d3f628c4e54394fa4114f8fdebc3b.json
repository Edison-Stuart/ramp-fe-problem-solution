{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useCustomFetch } from \"./useCustomFetch\";\nexport function useTransactionsByEmployee() {\n  _s();\n\n  const {\n    fetchWithoutCache,\n    fetchWithCache,\n    loading\n  } = useCustomFetch();\n  const [transactionsByEmployee, setTransactionsByEmployee] = useState(null);\n  const [allEmployeeTransactions, setAllEmployeeTransactions] = useState();\n  const fetchAllEmployeeTransactions = useEffect(() => {\n    const getData = async () => {\n      const employeeData = await fetchWithoutCache(\"employees\");\n\n      if (employeeData) {\n        const employeeTransactions = employeeData.map(async employee => await fetchWithCache(\"transactionsByEmployee\", {\n          employeeId: employee.id\n        }));\n        let transasctions = [];\n        employeeTransactions.forEach(employee => {\n          employee.then(transaction => {\n            transasctions === null || transasctions === void 0 ? void 0 : transasctions.push(transaction);\n          });\n        });\n        console.log(transasctions, \"___________DEBUG\");\n        setAllEmployeeTransactions(transasctions);\n      }\n    };\n\n    getData();\n  }, []);\n  const fetchById = useCallback(employeeId => {\n    console.log(allEmployeeTransactions);\n\n    if (allEmployeeTransactions) {\n      const pickedEmployee = allEmployeeTransactions.filter(employee => {\n        return employee === null || employee === void 0 ? void 0 : employee.every(_ref => {\n          let {\n            employee\n          } = _ref;\n          return employee.id === employeeId;\n        });\n      })[0];\n      setTransactionsByEmployee(pickedEmployee);\n    } // transactions?.filter((transaction) => {\n    //   return transaction.employee.id === employeeId\n    // })\n\n  }, // const data = allEmployeeTransactions?.filter((transaction) => console.log(transaction))\n  // setTransactionsByEmployee(data)\n  [allEmployeeTransactions]);\n  const invalidateData = useCallback(() => {\n    setTransactionsByEmployee(null);\n  }, []);\n  return {\n    data: transactionsByEmployee,\n    loading,\n    fetchById,\n    invalidateData\n  };\n}\n\n_s(useTransactionsByEmployee, \"lO8BA7yLMxEm74HuaAAbMyTuYZ8=\", false, function () {\n  return [useCustomFetch];\n});","map":{"version":3,"names":["useCallback","useEffect","useState","useCustomFetch","useTransactionsByEmployee","fetchWithoutCache","fetchWithCache","loading","transactionsByEmployee","setTransactionsByEmployee","allEmployeeTransactions","setAllEmployeeTransactions","fetchAllEmployeeTransactions","getData","employeeData","employeeTransactions","map","employee","employeeId","id","transasctions","forEach","then","transaction","push","console","log","fetchById","pickedEmployee","filter","every","invalidateData","data"],"sources":["/home/edison/TakeHomeWork/Ramp/ramp-fe-challenge/src/hooks/useTransactionsByEmployee.ts"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\"\nimport { RequestByEmployeeParams, Transaction } from \"../utils/types\"\nimport { TransactionsByEmployeeResult } from \"./types\"\nimport { useCustomFetch } from \"./useCustomFetch\"\nimport { Employee } from \"../utils/types\"\n\nexport function useTransactionsByEmployee(): TransactionsByEmployeeResult {\n  const { fetchWithoutCache, fetchWithCache, loading } = useCustomFetch()\n  const [transactionsByEmployee, setTransactionsByEmployee] = useState<Transaction[] | null>(null)\n  const [allEmployeeTransactions, setAllEmployeeTransactions] = useState<Array<Transaction[] | null>>()\n\n  const fetchAllEmployeeTransactions = useEffect(() => {\n    const getData = async () => {\n      const employeeData = await fetchWithoutCache<Employee[]>(\"employees\")\n      if (employeeData) {\n        const employeeTransactions = employeeData.map(\n          async (employee) =>\n            await fetchWithCache<Transaction[], RequestByEmployeeParams>(\"transactionsByEmployee\", {\n              employeeId: employee.id,\n            })\n        )\n        let transasctions: Array<Transaction[] | null> = []\n        employeeTransactions.forEach((employee) => {\n          employee.then((transaction) => {\n            transasctions?.push(transaction)\n          })\n        })\n        console.log(transasctions, \"___________DEBUG\")\n        setAllEmployeeTransactions(transasctions)\n      }\n    }\n    getData()\n  }, [])\n\n  const fetchById = useCallback(\n    (employeeId: string) => {\n      console.log(allEmployeeTransactions)\n      if (allEmployeeTransactions) {\n        const pickedEmployee = allEmployeeTransactions.filter((employee) => {\n          return employee?.every(({ employee }) => employee.id === employeeId)\n        })[0]\n        setTransactionsByEmployee(pickedEmployee)\n      }\n      // transactions?.filter((transaction) => {\n      //   return transaction.employee.id === employeeId\n      // })\n    },\n    // const data = allEmployeeTransactions?.filter((transaction) => console.log(transaction))\n    // setTransactionsByEmployee(data)\n    [allEmployeeTransactions]\n  )\n\n  const invalidateData = useCallback(() => {\n    setTransactionsByEmployee(null)\n  }, [])\n\n  return { data: transactionsByEmployee, loading, fetchById, invalidateData }\n}\n"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AAGA,SAASC,cAAT,QAA+B,kBAA/B;AAGA,OAAO,SAASC,yBAAT,GAAmE;EAAA;;EACxE,MAAM;IAAEC,iBAAF;IAAqBC,cAArB;IAAqCC;EAArC,IAAiDJ,cAAc,EAArE;EACA,MAAM,CAACK,sBAAD,EAAyBC,yBAAzB,IAAsDP,QAAQ,CAAuB,IAAvB,CAApE;EACA,MAAM,CAACQ,uBAAD,EAA0BC,0BAA1B,IAAwDT,QAAQ,EAAtE;EAEA,MAAMU,4BAA4B,GAAGX,SAAS,CAAC,MAAM;IACnD,MAAMY,OAAO,GAAG,YAAY;MAC1B,MAAMC,YAAY,GAAG,MAAMT,iBAAiB,CAAa,WAAb,CAA5C;;MACA,IAAIS,YAAJ,EAAkB;QAChB,MAAMC,oBAAoB,GAAGD,YAAY,CAACE,GAAb,CAC3B,MAAOC,QAAP,IACE,MAAMX,cAAc,CAAyC,wBAAzC,EAAmE;UACrFY,UAAU,EAAED,QAAQ,CAACE;QADgE,CAAnE,CAFK,CAA7B;QAMA,IAAIC,aAA0C,GAAG,EAAjD;QACAL,oBAAoB,CAACM,OAArB,CAA8BJ,QAAD,IAAc;UACzCA,QAAQ,CAACK,IAAT,CAAeC,WAAD,IAAiB;YAC7BH,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEI,IAAf,CAAoBD,WAApB;UACD,CAFD;QAGD,CAJD;QAKAE,OAAO,CAACC,GAAR,CAAYN,aAAZ,EAA2B,kBAA3B;QACAT,0BAA0B,CAACS,aAAD,CAA1B;MACD;IACF,CAlBD;;IAmBAP,OAAO;EACR,CArB6C,EAqB3C,EArB2C,CAA9C;EAuBA,MAAMc,SAAS,GAAG3B,WAAW,CAC1BkB,UAAD,IAAwB;IACtBO,OAAO,CAACC,GAAR,CAAYhB,uBAAZ;;IACA,IAAIA,uBAAJ,EAA6B;MAC3B,MAAMkB,cAAc,GAAGlB,uBAAuB,CAACmB,MAAxB,CAAgCZ,QAAD,IAAc;QAClE,OAAOA,QAAP,aAAOA,QAAP,uBAAOA,QAAQ,CAAEa,KAAV,CAAgB;UAAA,IAAC;YAAEb;UAAF,CAAD;UAAA,OAAkBA,QAAQ,CAACE,EAAT,KAAgBD,UAAlC;QAAA,CAAhB,CAAP;MACD,CAFsB,EAEpB,CAFoB,CAAvB;MAGAT,yBAAyB,CAACmB,cAAD,CAAzB;IACD,CAPqB,CAQtB;IACA;IACA;;EACD,CAZ0B,EAa3B;EACA;EACA,CAAClB,uBAAD,CAf2B,CAA7B;EAkBA,MAAMqB,cAAc,GAAG/B,WAAW,CAAC,MAAM;IACvCS,yBAAyB,CAAC,IAAD,CAAzB;EACD,CAFiC,EAE/B,EAF+B,CAAlC;EAIA,OAAO;IAAEuB,IAAI,EAAExB,sBAAR;IAAgCD,OAAhC;IAAyCoB,SAAzC;IAAoDI;EAApD,CAAP;AACD;;GAnDe3B,yB;UACyCD,c"},"metadata":{},"sourceType":"module"}