{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useContext } from \"react\";\nimport { AppContext } from \"../utils/context\";\nimport { useWrappedRequest } from \"./useWrappedRequest\";\nimport { useCache } from \"./useCache\";\nexport function useCustomFetch() {\n  _s();\n\n  const {\n    cache\n  } = useContext(AppContext);\n  const {\n    loading,\n    wrappedRequest\n  } = useWrappedRequest();\n  const {\n    getData,\n    getDataWithoutCache\n  } = useCache();\n  const fetchWithCache = useCallback(async (endpoint, params) => getData(endpoint, params), [getData]);\n  const fetchWithoutCache = useCallback(async (endpoint, params) => getDataWithoutCache(endpoint, params), [wrappedRequest]);\n  const clearCache = useCallback(() => {\n    if ((cache === null || cache === void 0 ? void 0 : cache.current) === undefined) {\n      return;\n    }\n\n    cache.current = new Map();\n  }, [cache]);\n  const clearCacheByEndpoint = useCallback(endpointsToClear => {\n    if ((cache === null || cache === void 0 ? void 0 : cache.current) === undefined) {\n      return;\n    }\n\n    const cacheKeys = Array.from(cache.current.keys());\n\n    for (const key of cacheKeys) {\n      const clearKey = endpointsToClear.some(endpoint => key.startsWith(endpoint));\n\n      if (clearKey) {\n        cache.current.delete(key);\n      }\n    }\n  }, [cache]);\n  return {\n    fetchWithCache,\n    fetchWithoutCache,\n    clearCache,\n    clearCacheByEndpoint,\n    loading\n  };\n}\n\n_s(useCustomFetch, \"h5hIlFELn4yEDojEqJ6+R5+x2SM=\", false, function () {\n  return [useWrappedRequest, useCache];\n});\n\nfunction getCacheKey(endpoint, params) {\n  return `${endpoint}${params ? `@${JSON.stringify(params)}` : \"\"}`;\n}","map":{"version":3,"names":["useCallback","useContext","AppContext","useWrappedRequest","useCache","useCustomFetch","cache","loading","wrappedRequest","getData","getDataWithoutCache","fetchWithCache","endpoint","params","fetchWithoutCache","clearCache","current","undefined","Map","clearCacheByEndpoint","endpointsToClear","cacheKeys","Array","from","keys","key","clearKey","some","startsWith","delete","getCacheKey","JSON","stringify"],"sources":["/home/edison/TakeHomeWork/Ramp/ramp-fe-challenge/src/hooks/useCustomFetch.ts"],"sourcesContent":["import { useCallback, useContext } from \"react\"\nimport { AppContext } from \"../utils/context\"\nimport { fakeFetch, RegisteredEndpoints } from \"../utils/fetch\"\nimport { useWrappedRequest } from \"./useWrappedRequest\"\nimport { useCache } from \"./useCache\"\n\nexport function useCustomFetch() {\n  const { cache } = useContext(AppContext)\n  const { loading, wrappedRequest } = useWrappedRequest()\n  const { getData, getDataWithoutCache } = useCache()\n\n  const fetchWithCache = useCallback(\n    async <TData, TParams extends object = object>(\n      endpoint: RegisteredEndpoints,\n      params?: TParams\n    ): Promise<TData | null> => getData(endpoint, params),\n    [getData]\n  )\n\n  const fetchWithoutCache = useCallback(\n    async <TData, TParams extends object = object>(\n      endpoint: RegisteredEndpoints,\n      params?: TParams\n    ): Promise<TData | null> => getDataWithoutCache(endpoint, params),\n    [wrappedRequest]\n  )\n\n  const clearCache = useCallback(() => {\n    if (cache?.current === undefined) {\n      return\n    }\n\n    cache.current = new Map<string, string>()\n  }, [cache])\n\n  const clearCacheByEndpoint = useCallback(\n    (endpointsToClear: RegisteredEndpoints[]) => {\n      if (cache?.current === undefined) {\n        return\n      }\n\n      const cacheKeys = Array.from(cache.current.keys())\n\n      for (const key of cacheKeys) {\n        const clearKey = endpointsToClear.some((endpoint) => key.startsWith(endpoint))\n\n        if (clearKey) {\n          cache.current.delete(key)\n        }\n      }\n    },\n    [cache]\n  )\n\n  return { fetchWithCache, fetchWithoutCache, clearCache, clearCacheByEndpoint, loading }\n}\n\nfunction getCacheKey(endpoint: RegisteredEndpoints, params?: object) {\n  return `${endpoint}${params ? `@${JSON.stringify(params)}` : \"\"}`\n}\n"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,OAAO,SAASC,cAAT,GAA0B;EAAA;;EAC/B,MAAM;IAAEC;EAAF,IAAYL,UAAU,CAACC,UAAD,CAA5B;EACA,MAAM;IAAEK,OAAF;IAAWC;EAAX,IAA8BL,iBAAiB,EAArD;EACA,MAAM;IAAEM,OAAF;IAAWC;EAAX,IAAmCN,QAAQ,EAAjD;EAEA,MAAMO,cAAc,GAAGX,WAAW,CAChC,OACEY,QADF,EAEEC,MAFF,KAG4BJ,OAAO,CAACG,QAAD,EAAWC,MAAX,CAJH,EAKhC,CAACJ,OAAD,CALgC,CAAlC;EAQA,MAAMK,iBAAiB,GAAGd,WAAW,CACnC,OACEY,QADF,EAEEC,MAFF,KAG4BH,mBAAmB,CAACE,QAAD,EAAWC,MAAX,CAJZ,EAKnC,CAACL,cAAD,CALmC,CAArC;EAQA,MAAMO,UAAU,GAAGf,WAAW,CAAC,MAAM;IACnC,IAAI,CAAAM,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEU,OAAP,MAAmBC,SAAvB,EAAkC;MAChC;IACD;;IAEDX,KAAK,CAACU,OAAN,GAAgB,IAAIE,GAAJ,EAAhB;EACD,CAN6B,EAM3B,CAACZ,KAAD,CAN2B,CAA9B;EAQA,MAAMa,oBAAoB,GAAGnB,WAAW,CACrCoB,gBAAD,IAA6C;IAC3C,IAAI,CAAAd,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEU,OAAP,MAAmBC,SAAvB,EAAkC;MAChC;IACD;;IAED,MAAMI,SAAS,GAAGC,KAAK,CAACC,IAAN,CAAWjB,KAAK,CAACU,OAAN,CAAcQ,IAAd,EAAX,CAAlB;;IAEA,KAAK,MAAMC,GAAX,IAAkBJ,SAAlB,EAA6B;MAC3B,MAAMK,QAAQ,GAAGN,gBAAgB,CAACO,IAAjB,CAAuBf,QAAD,IAAca,GAAG,CAACG,UAAJ,CAAehB,QAAf,CAApC,CAAjB;;MAEA,IAAIc,QAAJ,EAAc;QACZpB,KAAK,CAACU,OAAN,CAAca,MAAd,CAAqBJ,GAArB;MACD;IACF;EACF,CAfqC,EAgBtC,CAACnB,KAAD,CAhBsC,CAAxC;EAmBA,OAAO;IAAEK,cAAF;IAAkBG,iBAAlB;IAAqCC,UAArC;IAAiDI,oBAAjD;IAAuEZ;EAAvE,CAAP;AACD;;GAjDeF,c;UAEsBF,iB,EACKC,Q;;;AAgD3C,SAAS0B,WAAT,CAAqBlB,QAArB,EAAoDC,MAApD,EAAqE;EACnE,OAAQ,GAAED,QAAS,GAAEC,MAAM,GAAI,IAAGkB,IAAI,CAACC,SAAL,CAAenB,MAAf,CAAuB,EAA9B,GAAkC,EAAG,EAAhE;AACD"},"metadata":{},"sourceType":"module"}